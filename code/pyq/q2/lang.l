/* lang.l: Lexer for the language a^m b^n c^n d^m */
%{
#include "lang.tab.h" // Include header generated by Yacc for token definitions
#include <stdio.h>

// No global counters needed here, they will be managed in Yacc
%}

%%
[a]     { return A; }
[b]     { return B; }
[c]     { return C; }
[d]     { return D; }
\n      { return NL; } /* Newline signifies end of string */
[ \t]+  { /* Ignore whitespace */ }
.       { 
            fprintf(stderr, "Error: Invalid character '%s' encountered.\n", yytext);
            return INVALID_CHAR; /* Return a token for invalid characters */
        }
%%

/* C code section (optional, yywrap is needed by default) */
int yywrap() {
    return 1; /* Signal that there are no more input files */
}