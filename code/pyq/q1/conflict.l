%{
// conflict.l
#include "conflict.tab.h" // Include token definitions generated by YACC
%}

%%
[ \t\n]+        ; /* Ignore whitespace and newlines */

if              { return IF; }
then            { return THEN; }
else            { return ELSE; }
[a-zA-Z_][a-zA-Z0-9_]* { /* Simple identifier rule */
                  /* yylval = strdup(yytext); // Uncomment if you need ID values */
                  return ID; 
                }
=               { return ASSIGN; }
;               { return SEMI; }
.               { fprintf(stderr, "Lexer error: Unexpected character '%c'\n", *yytext); } 
%%

int yywrap() {
    // Called at end of input, return 1 to signal no more files
    return 1;
}